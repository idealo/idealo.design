{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport cn from 'classnames';\nimport styles from './Sidebar.module.scss';\nimport chevronIcon from './ico_chevron_right.svg';\nimport foundationsIcon from './ico_foundations.svg';\nimport elementsIcon from './ico_elements.svg';\nimport componentsIcon from './ico_components.svg';\nimport assetsIcon from './ico_assets.svg';\nimport otherIcon from './ico_datasheet_outline.svg';\nimport * as Elems from '../../data/__generated__elements__';\nconst sections = [{\n  icon: foundationsIcon,\n  title: 'Foundations',\n  children: [{\n    title: 'Overview',\n    href: '/foundations'\n  }, {\n    title: 'Colors',\n    href: '/foundations/colors'\n  }, {\n    title: 'Typography',\n    href: '/foundations/typography'\n  } // { title: 'Layout', href: '/foundations/layout' },\n  ]\n}, {\n  icon: elementsIcon,\n  title: 'Elements',\n  children: Object.keys(Elems).map(key => {\n    const elem = Elems[key];\n    return {\n      title: elem.title,\n      href: `/elements/${elem.slug}`\n    };\n  }) // old static\n  // [\n  //     { title: 'Overview', href: '/elements' },\n  //     { title: 'Button', href: '/elements/button' },\n  //     { title: 'Form Input', href: '/elements/form-input' },\n  // ]\n\n}, {\n  icon: componentsIcon,\n  title: 'Components',\n  children: [{\n    title: 'Overview',\n    href: '/components'\n  }, {\n    title: 'Header',\n    href: '/components/header'\n  }, {\n    title: 'Footer',\n    href: '/components/footer'\n  }, {\n    title: 'International Prices',\n    href: '/components/international-prices'\n  }]\n}, {\n  icon: assetsIcon,\n  title: 'Assets',\n  children: [{\n    title: 'Overview',\n    href: '/assets'\n  }, {\n    title: 'Sketch',\n    href: '/assets/sketch'\n  }]\n}, {\n  icon: otherIcon,\n  title: 'Other',\n  children: [{\n    title: 'Scratchpad',\n    href: '/scratchpad'\n  }]\n}];\n\nclass NavSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClosed: true\n    };\n    this.toggleState = this.toggleState.bind(this);\n    this.closeIfOpen = this.closeIfOpen.bind(this);\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('click:toggleSidebar', this.closeIfOpen);\n  }\n\n  componentWillUnmount() {\n    window.document.removeEventListener('click:toggleSidebar', this.closeIfOpen);\n  }\n\n  closeIfOpen() {\n    if (!this.state.isClosed) {\n      this.setState({\n        isClosed: !this.state.isClosed\n      });\n    }\n  }\n\n  toggleState() {\n    this.setState({\n      isClosed: !this.state.isClosed\n    });\n  }\n\n  render() {\n    const visibility = this.state.isClosed ? 'hidden' : 'visible';\n    const height = this.state.isClosed ? 0 : 'auto';\n    const transform = this.state.isClosed ? 'none' : 'rotate(90deg)';\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: styles.VerticalNav__TopLevel,\n      onClick: () => {\n        if (!this.props.isSidebarOpen) {\n          const toggleSidebarEvent = new Event('click:toggleSidebar');\n          window.document.dispatchEvent(toggleSidebarEvent);\n        }\n\n        this.toggleState();\n      }\n    }, this.props.section.icon && __jsx(\"img\", {\n      className: styles.VerticalNav__TopLevelIcon,\n      src: this.props.section.icon\n    }), this.props.isSidebarOpen && __jsx(React.Fragment, null, __jsx(\"span\", {\n      className: styles.VerticalNav__TopLevelTitle\n    }, this.props.section.title), __jsx(\"img\", {\n      style: {\n        transform\n      },\n      className: styles.VerticalNav__TopLevelAngle,\n      src: chevronIcon\n    }))), __jsx(\"ul\", {\n      style: {\n        height\n      }\n    }, this.props.section.children && this.props.section.children.map((item, idx) => __jsx(Link, {\n      href: \"/elements/[element]\",\n      shallow: true,\n      as: item.href,\n      key: idx\n    }, __jsx(\"li\", {\n      style: {\n        visibility\n      }\n    }, __jsx(\"a\", null, item.title))))));\n  }\n\n}\n\nexport class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isStickyModel: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('Header:enableSticky', () => {\n      this.setState({\n        isStickyMode: true\n      });\n    });\n    window.addEventListener('Header:disableSticky', () => {\n      this.setState({\n        isStickyMode: false\n      });\n    });\n  }\n\n  render() {\n    const style = {\n      width: this.props.isOpen ? '20rem' : '5.5rem',\n      top: this.state.isStickyMode ? '3rem' : ''\n    };\n    return __jsx(\"aside\", null, __jsx(\"nav\", {\n      style: style,\n      className: styles.Sidebar\n    }, sections.map((section, idx) => __jsx(NavSection, {\n      isSidebarOpen: this.props.isOpen,\n      key: idx,\n      section: section\n    }))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}