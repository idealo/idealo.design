{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport styles from './Header.module.scss';\nimport btnIco from './ico_hamburger.svg';\nimport magnifierIco from './ico_search.svg';\nimport closeIco from './ico_cross_circle_outline.svg';\nimport { getElementBySlug } from '../../data/elements';\n\nvar Search = /*#__PURE__*/function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n    _this.handleOnKeyUp = _this.handleOnKeyUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.document.addEventListener('keyup', this.handleOnKeyUp);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.document.removeEventListener('keyup', this.handleOnKeyUp);\n    }\n  }, {\n    key: \"handleOnKeyUp\",\n    value: function handleOnKeyUp(event) {\n      if (event.ctrlKey && event.which == 70) {\n        this.props.onClick();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchInputStyle = {\n        visibility: this.props.isOpen ? 'visible' : 'hidden',\n        width: this.props.isOpen ? '40vw' : 0,\n        padding: this.props.isOpen ? '.5rem' : 0,\n        margin: this.props.isOpen ? 'auto 2rem auto auto' : 0\n      };\n      return __jsx(React.Fragment, null, __jsx(\"input\", {\n        style: searchInputStyle,\n        className: styles.SearchInput,\n        onTransitionEnd: function onTransitionEnd(event) {\n          event.persist();\n          event.target.focus();\n          event.target.value = '';\n        },\n        autoFocus: true\n      }), __jsx(\"img\", {\n        className: styles.SearchToggle,\n        onClick: this.props.onClick,\n        src: this.props.isOpen ? closeIco : magnifierIco\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nvar StickyMenu = /*#__PURE__*/function (_React$Component2) {\n  _inherits(StickyMenu, _React$Component2);\n\n  var _super2 = _createSuper(StickyMenu);\n\n  function StickyMenu() {\n    _classCallCheck(this, StickyMenu);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(StickyMenu, [{\n    key: \"render\",\n    value: function render() {\n      var element = getElementBySlug('button');\n      var style = {\n        marginLeft: this.props.isSidebarOpen ? '17rem' : '2.5rem'\n      };\n      return __jsx(\"div\", {\n        style: style,\n        className: styles.StickyMenu\n      }, this.props.active && __jsx(React.Fragment, null, element.sections && element.sections.filter(function (section) {\n        return section.type === 'h2';\n      }).map(function (section, idx) {\n        return __jsx(\"a\", {\n          key: idx,\n          href: \"#\".concat(section.content)\n        }, section.content);\n      })));\n    }\n  }]);\n\n  return StickyMenu;\n}(React.Component);\n\nexport var Header = /*#__PURE__*/function (_React$Component3) {\n  _inherits(Header, _React$Component3);\n\n  var _super3 = _createSuper(Header);\n\n  function Header(props) {\n    var _this2;\n\n    _classCallCheck(this, Header);\n\n    _this2 = _super3.call(this, props);\n    _this2.state = {\n      isSearchInputOpen: false,\n      isStickyMode: false,\n      isSidebarOpen: true\n    };\n    _this2.toggleNavbarState = _this2.toggleNavbarState.bind(_assertThisInitialized(_this2));\n    _this2.openSearchInput = _this2.openSearchInput.bind(_assertThisInitialized(_this2));\n    _this2.closeSearchInput = _this2.closeSearchInput.bind(_assertThisInitialized(_this2));\n    _this2.toggleSearchInput = _this2.toggleSearchInput.bind(_assertThisInitialized(_this2));\n    _this2.enableSticky = _this2.enableSticky.bind(_assertThisInitialized(_this2));\n    _this2.disableSticky = _this2.disableSticky.bind(_assertThisInitialized(_this2));\n    _this2.toggleSidebar = _this2.toggleSidebar.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      window.addEventListener('Header:enableSticky', this.enableSticky);\n      window.addEventListener('Header:disableSticky', this.disableSticky);\n      window.document.addEventListener('click:toggleSidebar', this.toggleSidebar);\n\n      document.onkeydown = function (evt) {\n        evt = evt || window.event;\n        var isEscape = false;\n\n        if (\"key\" in evt) {\n          isEscape = evt.key === \"Escape\" || evt.key === \"Esc\";\n        } else {\n          isEscape = evt.keyCode === 27;\n        }\n\n        if (isEscape) {\n          _this3.closeSearchInput();\n        }\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('Header:enableSticky', this.enableSticky);\n      window.removeEventListener('Header:disableSticky', this.disableSticky);\n      window.document.removeEventListener('click:toggleSidebar', this.toggleSidebar);\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      this.setState({\n        isSidebarOpen: !this.state.isSidebarOpen\n      });\n    }\n  }, {\n    key: \"enableSticky\",\n    value: function enableSticky() {\n      this.setState({\n        isStickyMode: true\n      });\n    }\n  }, {\n    key: \"disableSticky\",\n    value: function disableSticky() {\n      this.setState({\n        isStickyMode: false\n      });\n    }\n  }, {\n    key: \"closeSearchInput\",\n    value: function closeSearchInput() {\n      this.setState({\n        isSearchInputOpen: false\n      });\n    }\n  }, {\n    key: \"openSearchInput\",\n    value: function openSearchInput() {\n      this.setState({\n        isSearchInputOpen: true\n      });\n    }\n  }, {\n    key: \"toggleSearchInput\",\n    value: function toggleSearchInput() {\n      this.setState({\n        isSearchInputOpen: !this.state.isSearchInputOpen\n      });\n    }\n  }, {\n    key: \"toggleNavbarState\",\n    value: function toggleNavbarState() {\n      var toggleEvent = new Event('click:toggleSidebar');\n      window.document.dispatchEvent(toggleEvent);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stickyStyle = {\n        backgroundColor: '#0A3761',\n        color: '#0A3761',\n        padding: '.5rem 0'\n      };\n      var logoStickyStyle = {\n        color: '#0A3761'\n      };\n      return __jsx(\"header\", {\n        style: this.state.isStickyMode ? stickyStyle : null,\n        className: styles.Header\n      }, __jsx(\"img\", {\n        className: styles.SideNavToggle,\n        src: btnIco,\n        onClick: this.toggleNavbarState\n      }), __jsx(\"h1\", {\n        style: this.state.isStickyMode ? {\n          display: 'none'\n        } : null\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", {\n        style: this.state.isStickyMode ? logoStickyStyle : null\n      }, \"idealo design system\"))), __jsx(StickyMenu, {\n        isSidebarOpen: this.state.isSidebarOpen,\n        active: this.state.isStickyMode\n      }), __jsx(Search, {\n        onClick: this.toggleSearchInput,\n        closeSearchInput: this.closeSearchInput,\n        isOpen: this.state.isSearchInputOpen\n      }));\n    }\n  }]);\n\n  return Header;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}