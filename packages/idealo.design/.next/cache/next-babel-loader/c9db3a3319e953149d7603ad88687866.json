{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Head from 'next/head';\nimport BlogPost from '../components/BlogPost';\nimport Card from '../components/Card';\nexport var meta = {\n  published: true,\n  publishedAt: '2019-01-15',\n  title: 'This is my very first blog post',\n  summary: 'I am learning how to build a blog using Markdown in a static web page build on top of Next.js'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var children = _ref.children;\n  return mdx(React.Fragment, null, mdx(Head, null, mdx(\"title\", null, \"idealo Design System\")), mdx(BlogPost, {\n    meta: meta\n  }, mdx(Card, null, children)));\n};\n\nexport default function MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = _objectWithoutProperties(_ref2, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fux\"), \" is idealo's Design System for products and experiences. With our Design Language as its foundation,\\nthe system consists of working code, design tools and resources, human interface guidelines, and a community of contributors.\"), mdx(\"h2\", null, \"Why\"), mdx(\"p\", null, \"Development of digital products is getting more and more complex. Engineering, Designer, Product Owners and Business Owners all\\nhave their own perspective on the product they're working on together. In order to efficiently tackle cross-cutting concerns like\\nAccessibility, Performance, Visual Consistency and Information Sharing it is helpful to define and curate a common mental model\\nof the ongoings.\"), mdx(\"h3\", null, \"It's about the processes\"), mdx(\"p\", null, \"Fostering a culture of collaboration between all the stakeholders it helps organizing team dynamics, relationships, documentation\\nand code. As a Catalog for idealos Component Model it helps creating abstractions over boring repetitive tasks and gives everyone\\nmore time to innovate, focusing on quality and solving novel problems. Newly joined idealos also greatly benefit from getting an\\noverview of the ongoings.\"), mdx(\"h3\", null, \"Facilitate Code Reuse\"), mdx(\"p\", null, \"Last but certainly not least, we will eventually be able to enjoy the blessings of a more common code base. Being able to reuse\\nbattle-tested code that is developed and used throughout the company leaves teams more time to think about Domain level responsibilities\\nand worry less about lower level aspects like browser support, accessibility, performance or compatibility. Again, this is not about\\nimposing technologies on everyone but more about setting up a process of finding the least common denominator while abstracting away\\ntechnical details and defining conventions and interfaces.\"), mdx(\"h2\", null, \"How\"), mdx(\"p\", null, \"Currently, we're working hard on setting up the fundamentals being this Catalog site, Code Repositories, CI/CD, Communication Channels,\\nencouraging the first contributors and researching existing code for integration possibilities and required migration strategies.\"), mdx(\"p\", null, \"We will try to incrementally onboard more and more teams and codebases into the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fux\"), \" process to learn from it, one kink at a time.\\nAltogether, we will figure out how the Frontend Development works best for all of us, balancing out abstraction versus flexibility.\"), mdx(\"h3\", null, \"Technology\"), mdx(\"p\", null, \"We already have a system that makes money! Therefore, while being a fun intellectual adventure there would be little to no sense in simply\\nreplacing technology X with technology Y just to replace it with technology Z in the future. Instead we should focus on abstractions that\\nmake sense to our business. This is exactly, what a UI Component Model is supposed to express.\"), mdx(\"p\", null, \"The Library of UI Components aims to make performance and accessibility first class citizens whilst staying agnostic to certain vendors\\nand providing multiple adapters and interfaces for current systems. To increase adoption further, using the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Fux\"), \" UI Components does not\\nmean that there's no way to opt-out for certain variations; in contrast it is anticipated that adopters will implement their UI Components\\nlocally and, when they've proven their business value and general reusability.\"), mdx(\"h3\", null, \"Process\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/ids_v02.svg\",\n    \"alt\": \"Design System Process Overview\",\n    \"title\": \"Design System Process\"\n  }))), mdx(\"h4\", null, \"New Component\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"shorter iteration cycle between Eng and UX\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"prove component usability within the team's scope (e.g. A/B testing)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"extract out component and add to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Fux\"), \" Repo\")), mdx(\"h4\", null, \"Reuse existing Component\"), mdx(\"p\", null, \"Just use it in your project\"), mdx(\"h4\", null, \"Update existing Component\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If it's a backwards-compatible addition: Add it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If it's a breaking change: Discuss with the \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Fux\"), \" team (clone or organize a refactoring with consumers)\\n\")), mdx(\"h4\", null, \"Deleting\"), mdx(\"p\", null, \"Unless it's a Core component (e.g. Inputs), Components will be deprecated and archived/deleted if no longer in use.\"), mdx(\"h2\", null, \"Contributing\"), mdx(\"p\", null, \"By now, you should have understood that the Design System is not just a simple bunch of packages on a site. If interested, we encourage\\nyou to join our efforts and participate in updating our Product Development process. No matter the role you're in, you're always welcome to\\nbring your specific perspective to the project, be it code, design or copywriting contributions or new ideas. Feedback is welcome!\"));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}